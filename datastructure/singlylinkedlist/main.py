from datastructure.singlylinkedlist.singlylinkedlist import SinglyLinkedList

if __name__ == '__main__':
    singly_linked_list = SinglyLinkedList()
    print(singly_linked_list)
    print("Is empty", singly_linked_list.is_empty())
    print("Count occurrences", singly_linked_list.count_occurrences("A"))
    print("Palindrome", singly_linked_list.is_palindrome())
    singly_linked_list.append("A")
    print(singly_linked_list)
    print(singly_linked_list.head.data)
    print(singly_linked_list.head.next)
    singly_linked_list.bulk_append(["B", "C", "D", "E"])
    print("After bulk append", singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.prepend("0")
    print("After prepend", singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    singly_linked_list.insert_node_after("X", "Y")
    print("After insert after X", singly_linked_list)
    singly_linked_list.insert_node_after("E", "F")
    print("After insert after E", singly_linked_list)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.insert_node_after("0", "00")
    print("After insert after 0", singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    singly_linked_list.insert_node_after("E", "EE")
    print("After insert after E", singly_linked_list)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.insert_node_before("0", "-1")
    print("After insert before 0", singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    singly_linked_list.insert_node_before("F", "FF")
    print("After insert before F", singly_linked_list)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.delete_node_by_key("W")
    print(singly_linked_list)
    singly_linked_list.delete_node_by_key("-1")
    print(singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    singly_linked_list.delete_node_by_key("F")
    print(singly_linked_list)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.delete_node_by_key("EE")
    print(singly_linked_list)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.delete_node_by_index(-1)
    print(singly_linked_list)
    singly_linked_list.delete_node_by_index(10)
    print(singly_linked_list)
    singly_linked_list.delete_node_by_index(0)
    print(singly_linked_list)
    singly_linked_list.delete_node_by_index(5)
    print(singly_linked_list)
    singly_linked_list.delete_node_by_index(1)
    print(singly_linked_list)
    print("Head is head", singly_linked_list.is_head(singly_linked_list.head))
    print("Head is tail", singly_linked_list.is_tail(singly_linked_list.head))
    print("Tail is head", singly_linked_list.is_head(singly_linked_list.tail_node()))
    print("Tail is tail", singly_linked_list.is_tail(singly_linked_list.tail_node()))
    print("Is emoty", singly_linked_list.is_empty())
    print("Size", singly_linked_list.list_size())
    print(singly_linked_list.find_node_by_key("00").data)
    print(singly_linked_list.find_node_by_key("?"))
    print(singly_linked_list.find_node_by_key("E").data)
    print(singly_linked_list.find_node_by_key("D").data)
    print(singly_linked_list.find_previous_by_key("00"))
    print(singly_linked_list.find_previous_by_key("E").data)
    singly_linked_list.reverse()
    print("After reverse", singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.swap_nodes("a", "b")
    print(singly_linked_list)
    singly_linked_list.swap_nodes("E", "00")
    print(singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.swap_nodes("00", "C")
    print(singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    singly_linked_list.bulk_append(["D", "E"])
    print(singly_linked_list)
    print("Count occurrences", singly_linked_list.count_occurrences("D"))
    singly_linked_list.remove_duplicates()
    print("After removing duplicates", singly_linked_list)
    print("Head data", singly_linked_list.head.data)
    print("Head next data", singly_linked_list.head.next.data)
    print("Tail Next", singly_linked_list.tail_node().next)
    print("Tail Data", singly_linked_list.tail_node().data)
    print("Tail previous next data", singly_linked_list.as_list()[-2].next.data)
    print("Tail previous data", singly_linked_list.as_list()[-2].data)
    print("Before", singly_linked_list)
    print(singly_linked_list.is_palindrome())
    print("After", singly_linked_list)
    singly_linked_list.bulk_append(["E", "D", "00", "C"])
    print(singly_linked_list)
    print(singly_linked_list.is_palindrome())